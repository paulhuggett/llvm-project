; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=riscv32 -riscv-no-aliases < %s \
; RUN:   | FileCheck -check-prefix=ALL %s

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -verify-machineinstrs \
; RUN:     -mattr=+xkeysomnosrli < %s                               \
; RUN:   | FileCheck -check-prefix=NOSRLI %s

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -verify-machineinstrs \
; RUN:     -mattr=+xkeysomnosrli -mattr=+xkeysomnosrl < %s          \
; RUN:   | FileCheck -check-prefix=NOSRL %s

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -verify-machineinstrs \
; RUN:     -mattr=+xkeysomnosrli -mattr=+xkeysomnosrl               \
; RUN:     -mattr=+xkeysomnosrai < %s                               \
; RUN:   | FileCheck -check-prefix=NOSRL-SRA %s

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -verify-machineinstrs \
; RUN:     -mattr=+xkeysomnosrli -mattr=+xkeysomnosrl               \
; RUN:     -mattr=+xkeysomnosrai -mattr=+xkeysomnoslli < %s         \
; RUN:   | FileCheck -check-prefix=NOSRL-SRA-SLLI %s

define i32 @f(i32 %x) nounwind {
; ALL-LABEL: f:
; ALL:       # %bb.0: # %entry
; ALL-NEXT:    srli a0, a0, 2
; ALL-NEXT:    jalr zero, 0(ra)
;
; NOSRLI-LABEL: f:
; NOSRLI:       # %bb.0: # %entry
; NOSRLI-NEXT:    addi a1, zero, 2
; NOSRLI-NEXT:    srl a0, a0, a1
; NOSRLI-NEXT:    jalr zero, 0(ra)
;
; NOSRL-LABEL: f:
; NOSRL:       # %bb.0: # %entry
; NOSRL-NEXT:    srai a0, a0, 2
; NOSRL-NEXT:    lui a1, 262144
; NOSRL-NEXT:    addi a1, a1, -1
; NOSRL-NEXT:    and a0, a0, a1
; NOSRL-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-LABEL: f:
; NOSRL-SRA:       # %bb.0: # %entry
; NOSRL-SRA-NEXT:    addi a1, zero, 2
; NOSRL-SRA-NEXT:    sra a0, a0, a1
; NOSRL-SRA-NEXT:    lui a1, 262144
; NOSRL-SRA-NEXT:    addi a1, a1, -1
; NOSRL-SRA-NEXT:    and a0, a0, a1
; NOSRL-SRA-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-SLLI-LABEL: f:
; NOSRL-SRA-SLLI:       # %bb.0: # %entry
; NOSRL-SRA-SLLI-NEXT:    addi a1, zero, 2
; NOSRL-SRA-SLLI-NEXT:    sra a0, a0, a1
; NOSRL-SRA-SLLI-NEXT:    lui a1, 262144
; NOSRL-SRA-SLLI-NEXT:    addi a1, a1, -1
; NOSRL-SRA-SLLI-NEXT:    and a0, a0, a1
; NOSRL-SRA-SLLI-NEXT:    jalr zero, 0(ra)
entry:
  %shr = lshr i32 %x, 2
  ret i32 %shr
}

define i32 @g(i32 %x) nounwind {
; ALL-LABEL: g:
; ALL:       # %bb.0: # %entry
; ALL-NEXT:    srli a0, a0, 30
; ALL-NEXT:    jalr zero, 0(ra)
;
; NOSRLI-LABEL: g:
; NOSRLI:       # %bb.0: # %entry
; NOSRLI-NEXT:    addi a1, zero, 30
; NOSRLI-NEXT:    srl a0, a0, a1
; NOSRLI-NEXT:    jalr zero, 0(ra)
;
; NOSRL-LABEL: g:
; NOSRL:       # %bb.0: # %entry
; NOSRL-NEXT:    srai a0, a0, 30
; NOSRL-NEXT:    andi a0, a0, 3
; NOSRL-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-LABEL: g:
; NOSRL-SRA:       # %bb.0: # %entry
; NOSRL-SRA-NEXT:    addi a1, zero, 30
; NOSRL-SRA-NEXT:    sra a0, a0, a1
; NOSRL-SRA-NEXT:    andi a0, a0, 3
; NOSRL-SRA-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-SLLI-LABEL: g:
; NOSRL-SRA-SLLI:       # %bb.0: # %entry
; NOSRL-SRA-SLLI-NEXT:    addi a1, zero, 30
; NOSRL-SRA-SLLI-NEXT:    sra a0, a0, a1
; NOSRL-SRA-SLLI-NEXT:    andi a0, a0, 3
; NOSRL-SRA-SLLI-NEXT:    jalr zero, 0(ra)

entry:
  %shr = lshr i32 %x, 30
  ret i32 %shr
}

define i32 @h(i32 %x, i32 %y) nounwind {
; ALL-LABEL: h:
; ALL:       # %bb.0: # %entry
; ALL-NEXT:    srl a0, a0, a1
; ALL-NEXT:    jalr zero, 0(ra)
;
; NOSRLI-LABEL: h:
; NOSRLI:       # %bb.0: # %entry
; NOSRLI-NEXT:    srl a0, a0, a1
; NOSRLI-NEXT:    jalr zero, 0(ra)
;
; NOSRL-LABEL: h:
; NOSRL:       # %bb.0: # %entry
; NOSRL-NEXT:    sra a0, a0, a1
; NOSRL-NEXT:    addi a2, zero, -1
; NOSRL-NEXT:    andi a1, a1, 31
; NOSRL-NEXT:    addi a3, zero, 32
; NOSRL-NEXT:    sub a3, a3, a1
; NOSRL-NEXT:    sll a1, a2, a3
; NOSRL-NEXT:    xori a1, a1, -1
; NOSRL-NEXT:    and a0, a0, a1
; NOSRL-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-LABEL: h:
; NOSRL-SRA:       # %bb.0: # %entry
; NOSRL-SRA-NEXT:    sra a0, a0, a1
; NOSRL-SRA-NEXT:    addi a2, zero, -1
; NOSRL-SRA-NEXT:    andi a1, a1, 31
; NOSRL-SRA-NEXT:    addi a3, zero, 32
; NOSRL-SRA-NEXT:    sub a3, a3, a1
; NOSRL-SRA-NEXT:    sll a1, a2, a3
; NOSRL-SRA-NEXT:    xori a1, a1, -1
; NOSRL-SRA-NEXT:    and a0, a0, a1
; NOSRL-SRA-NEXT:    jalr zero, 0(ra)
;
; NOSRL-SRA-SLLI-LABEL: h:
; NOSRL-SRA-SLLI:       # %bb.0: # %entry
; NOSRL-SRA-SLLI-NEXT:    sra a0, a0, a1
; NOSRL-SRA-SLLI-NEXT:    addi a2, zero, -1
; NOSRL-SRA-SLLI-NEXT:    andi a1, a1, 31
; NOSRL-SRA-SLLI-NEXT:    addi a3, zero, 32
; NOSRL-SRA-SLLI-NEXT:    sub a3, a3, a1
; NOSRL-SRA-SLLI-NEXT:    sll a1, a2, a3
; NOSRL-SRA-SLLI-NEXT:    xori a1, a1, -1
; NOSRL-SRA-SLLI-NEXT:    and a0, a0, a1
; NOSRL-SRA-SLLI-NEXT:    jalr zero, 0(ra)

entry:
  %shr = lshr i32 %x, %y
  ret i32 %shr
}

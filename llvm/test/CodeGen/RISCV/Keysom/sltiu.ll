; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5

; Selection DAG checks

; RUN: llc -mtriple=riscv32 -riscv-no-aliases < %s           \
; RUN:   | FileCheck -check-prefix=RV32I %s
; RUN: llc -mtriple=riscv32 -riscv-no-aliases                \
; RUN:     -mattr=+xkeysomnosltiu < %s                       \
; RUN:   | FileCheck -check-prefix=RV32I_NO_SLTIU %s
; RUN: llc -mtriple=riscv32 -riscv-no-aliases                \
; RUN:     -mattr=+xkeysomnosltiu -mattr=+xkeysomnosltu < %s \
; RUN:   | FileCheck -check-prefix=RV32I_NO_SLTIU_SLTU %s

; Global ISel checks

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -global-isel   \
; RUN:     -mattr=+xkeysomnosltiu < %s          \
; RUN:   | FileCheck -check-prefix=RV32I_GLISEL_NO_SLTIU %s

; RUN: llc -mtriple=riscv32 -riscv-no-aliases -global-isel   \
; RUN:     -mattr=+xkeysomnosltiu -mattr=+xkeysomnosltu < %s \
; RUN:   | FileCheck -check-prefix=RV32I_GLISEL_NO_SLTIU_NO_SLTU %s

define i32 @f(i32 %x) nounwind {
; RV32I-LABEL: f:
; RV32I:       # %bb.0: # %entry
; RV32I-NEXT:    sltiu a0, a0, 43
; RV32I-NEXT:    jalr zero, 0(ra)
;
; RV32I_NO_SLTIU-LABEL: f:
; RV32I_NO_SLTIU:       # %bb.0: # %entry
; RV32I_NO_SLTIU-NEXT:    addi a1, zero, 43
; RV32I_NO_SLTIU-NEXT:    sltu a0, a0, a1
; RV32I_NO_SLTIU-NEXT:    jalr zero, 0(ra)
;
; RV32I_NO_SLTIU_SLTU-LABEL: f:
; RV32I_NO_SLTIU_SLTU:       # %bb.0: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a1, zero, 43
; RV32I_NO_SLTIU_SLTU-NEXT:    bgeu a0, a1, .LBB0_2
; RV32I_NO_SLTIU_SLTU-NEXT:  # %bb.1: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a0, zero, 1
; RV32I_NO_SLTIU_SLTU-NEXT:    jalr zero, 0(ra)
; RV32I_NO_SLTIU_SLTU-NEXT:  .LBB0_2: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a0, zero, 0
; RV32I_NO_SLTIU_SLTU-NEXT:    jalr zero, 0(ra)
;
; RV32I_GLISEL_NO_SLTIU-LABEL: f:
; RV32I_GLISEL_NO_SLTIU:       # %bb.0: # %entry
; RV32I_GLISEL_NO_SLTIU-NEXT:    addi a1, zero, 43
; RV32I_GLISEL_NO_SLTIU-NEXT:    sltu a0, a0, a1
; RV32I_GLISEL_NO_SLTIU-NEXT:    jalr zero, 0(ra)
;
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-LABEL: f:
; RV32I_GLISEL_NO_SLTIU_NO_SLTU:       # %bb.0: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    addi a1, zero, 43
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    bgeu a0, a1, .LBB0_2
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:  # %bb.1: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    addi a0, zero, 1
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    jalr zero, 0(ra)
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:  .LBB0_2: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    addi a0, zero, 0
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    jalr zero, 0(ra)

entry:
  %cmp = icmp ult i32 %x, 43
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}


define i32 @g(i32 %x) nounwind {
; RV32I-LABEL: g:
; RV32I:       # %bb.0: # %entry
; RV32I-NEXT:    sltiu a1, a0, 1
; RV32I-NEXT:    add a0, a0, a1
; RV32I-NEXT:    jalr zero, 0(ra)
;
; RV32I_NO_SLTIU-LABEL: g:
; RV32I_NO_SLTIU:       # %bb.0: # %entry
; RV32I_NO_SLTIU-NEXT:    addi a1, zero, 1
; RV32I_NO_SLTIU-NEXT:    sltu a1, a0, a1
; RV32I_NO_SLTIU-NEXT:    add a0, a0, a1
; RV32I_NO_SLTIU-NEXT:    jalr zero, 0(ra)
;
; RV32I_NO_SLTIU_SLTU-LABEL: g:
; RV32I_NO_SLTIU_SLTU:       # %bb.0: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a1, a0, -1
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a2, zero, 1
; RV32I_NO_SLTIU_SLTU-NEXT:    bltu a1, a2, .LBB1_2
; RV32I_NO_SLTIU_SLTU-NEXT:  # %bb.1: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    addi a1, zero, 1
; RV32I_NO_SLTIU_SLTU-NEXT:    add a0, a0, a1
; RV32I_NO_SLTIU_SLTU-NEXT:    jalr zero, 0(ra)
; RV32I_NO_SLTIU_SLTU-NEXT:  .LBB1_2: # %entry
; RV32I_NO_SLTIU_SLTU-NEXT:    jalr zero, 0(ra)
;
; RV32I_GLISEL_NO_SLTIU-LABEL: g:
; RV32I_GLISEL_NO_SLTIU:       # %bb.0: # %entry
; RV32I_GLISEL_NO_SLTIU-NEXT:    addi a1, zero, 1
; RV32I_GLISEL_NO_SLTIU-NEXT:    bltu a1, a0, .LBB1_2
; RV32I_GLISEL_NO_SLTIU-NEXT:  # %bb.1: # %entry
; RV32I_GLISEL_NO_SLTIU-NEXT:    addi a0, zero, 1
; RV32I_GLISEL_NO_SLTIU-NEXT:  .LBB1_2: # %entry
; RV32I_GLISEL_NO_SLTIU-NEXT:    jalr zero, 0(ra)
;
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-LABEL: g:
; RV32I_GLISEL_NO_SLTIU_NO_SLTU:       # %bb.0: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    addi a1, zero, 1
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    bltu a1, a0, .LBB1_2
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:  # %bb.1: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    addi a0, zero, 1
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:  .LBB1_2: # %entry
; RV32I_GLISEL_NO_SLTIU_NO_SLTU-NEXT:    jalr zero, 0(ra)
; RV32I_GLISEL_NO_SLTIU_NO_SLTY:       # %bb.0: # %entry

entry:
  %y = tail call i32 @llvm.umax.i32(i32 %x, i32 1)
  ret i32 %y
}
